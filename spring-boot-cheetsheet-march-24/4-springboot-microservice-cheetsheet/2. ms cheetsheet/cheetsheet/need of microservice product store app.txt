

Product store application : microservice
______________________
coupon	: 8085
customer: 8081
product :8082
order : 8080



endpoints:
---------------
http://localhost:8082/productapp/products/1
http://localhost:8081/customerapp/customers/1
http://localhost:8085/couponapp/coupons/SUP100

http://localhost:8080/orderapp/orders

{

    "productId":1,
    "customerId":2,
    "couponCode":"SUP10",
    "qty":2
}


Response:
------------
{
    "id": "a58f678c-f2f5-4a2f-bf2f-5a0f888bbd16",
    "totalPrice": 198000.0,
    "orderDate": "2023-08-25T07:21:34.274+00:00",
    "customer": {
        "id": 2,
        "name": "rajat",
        "email": "rajat@gmail.com"
    },
    "product": {
        "id": 1,
        "name": "dell laptop",
        "price": 110000.0
    }
}


class Customer{
	private int id;
	private String name;
	private String email;
}

class Product {
	private int id;
	private String name;
	private double price;
}


 class Coupon {
	private int id;
	private String couponCode;
	private int discountPercentage;
	private Date expiredOn;
}


public class Order {
	private int id;
	private double totalPrice;
	private Date orderDate;
	private Customer customer;
	private Product product;

}

public class OrderRequest {
	private int productId;
	private int customerId;
	private String couponCode;
	private int qty;
}


Product module:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
server.port=8082
server.servlet.context-path=/productapp
spring.application.name=product-service




order service
~~~~~~~~~~~~~~~~~~~~~~~~

server.port=8080
server.servlet.context-path=/orderapp
spring.application.name=order-service



@Data
@NoArgsConstructor
@AllArgsConstructor
public class Order {
	private int id;
	private double totalPrice;
	private Date orderDate;
	private Customer customer;
	private Product product;

}



@Data
@AllArgsConstructor
@NoArgsConstructor
public class OrderRequest {
	private int cid;
	private int pid;
	private int quantity;
	private String couponCode;
}






@RestController
public class OrderRestController {

	@Autowired
	private RestTemplate restTemplate;
	
	
	@PostMapping(path="order")
	public ResponseEntity<Order> submitOrder(@RequestBody OrderRequest orderRequest){
		
		// call different rest service using rest template

	String couponUrl="http://localhost:8085/coupon/api/coupon/SUP10";
		
		String custUrl="http://localhost:8081/customer/api/customer/"+cid;
		System.out.println(custUrl);
		String productUrl="http://localhost:8082/product/api/product/"+pid;
		System.out.println(productUrl);
		Customer customer = restTemplate.getForObject(custUrl, Customer.class,cid);
		
		Product product = restTemplate.getForObject(productUrl, Product.class,pid);
		
		Coupon coupon=restTemplate.getForObject(couponUrl, Coupon.class);	

		double totalPrice= discountedPrice* orderRequest.getQuantity();
		Order order=new Order();
		order.setId(22);
		order.setCustomer(customer);
		order.setProduct(product);
		order.setTotalPrice(totalPrice);
		order.setOrderDate(new Date());
		return ResponseEntity.status(HttpStatus.CREATED).body(order);
		
	}

}




endpoints:
---------------


http://localhost:8082/productapp/products/1
http://localhost:8081/customerapp/customers/1
http://localhost:8085/couponapp/coupons/SUP100

http://localhost:8080/orderapp/orders

{

    "productId":1,
    "customerId":2,
    "couponCode":"SUP10",
    "qty":2
}


Response:
------------
{
    "id": "a58f678c-f2f5-4a2f-bf2f-5a0f888bbd16",
    "totalPrice": 198000.0,
    "orderDate": "2023-08-25T07:21:34.274+00:00",
    "customer": {
        "id": 2,
        "name": "rajat",
        "email": "rajat@gmail.com"
    },
    "product": {
        "id": 1,
        "name": "dell laptop",
        "price": 110000.0
    }
}


